# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: course1
title: Building a SHMUP with PixiJS
level: beginner
description: Learn to build a simple web SHMUP game with PixiJS
cardImageUrl: https://vscodeedu.com/assets/course-cards/card6.png
contacts:
  - displayName: Ian Huff
    pictureUrl: https://avatars.githubusercontent.com/u/812783?v=4
    homePageUrl: https://github.com/IanMatthewHuff
files:
  - path: course1/unit1/lesson1/lessonpart4/script.js
    content: >-
      let count = 0;


      document.getElementById('clickButton').addEventListener('click',
      function() {
          count++;
          //count++;
          document.getElementById('counter').textContent = count;
      });


      document.getElementById('resetButton').addEventListener('click',
      function() {
          count = 0;
          document.getElementById('counter').textContent = count;
      });
  - path: course1/unit1/lesson1/lessonpart3/index.html
    content: >-
      <!DOCTYPE html>

      <html lang="en">

      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>A Simple HTML Page</title>
      </head>

      <body>
          <h1>Welcome to My Simple Page</h1>
          <p>This is a basic HTML page</p>
          <p>If running in the VS Code for Education preview window, it will automatically update as you change the code</p>
          <p>Try editing the text: [HERE] to see it change in the preview window</p>
      </body>

      </html>
  - path: course1/unit1/lesson1/lessonpart4/index.html
    content: |-
      <!DOCTYPE html>
      <html>
      <head>
          <title>Button Counter</title>
      </head>
      <body>
          <h1>Click Counter</h1>
          <p>Count: <span id="counter">0</span></p>
          <button id="clickButton">Click Me</button>
          <button id="resetButton">Reset</button>
          
          <script src="script.js"></script>
      </body>
      </html>
  - path: course1/index.html
    content: |-
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <title>Our PixiJS Game</title>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
      </head>
      <body>
      </body>
      </html>
  - path: course1/unit1/lesson2/lessonpart4/index-checkpoint-1.html
    content: >-
      <!DOCTYPE html>


      <html>
          <head>
              <title>Our PixiJS Game</title>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <link rel="stylesheet" href="styles.css" />
          </head>

          <body>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/8.12.0/pixi.js"></script>
              <script src="script.js"></script>
          </body>
      </html>
  - path: course1/unit1/lesson2/lessonpart4/script-checkpoint-1.js
    content: |-
      const GAME_WIDTH = 224;
      const GAME_HEIGHT = 288;
      const ASPECT_RATIO = GAME_WIDTH / GAME_HEIGHT;

      async function initGame() {
          const app = new PIXI.Application();
          
          await app.init({
              width: GAME_WIDTH,
              height: GAME_HEIGHT,
              backgroundColor: 0x1099bb,
          });
          
          document.body.appendChild(app.canvas);
          function resizeCanvas() {
              const windowWidth = window.innerWidth;
              const windowHeight = window.innerHeight;
              const windowRatio = windowWidth / windowHeight;
              
              let newWidth, newHeight;
              
              if (windowRatio > ASPECT_RATIO) {
                  newHeight = windowHeight;
                  newWidth = newHeight * ASPECT_RATIO;
              } else {
                  newWidth = windowWidth;
                  newHeight = newWidth / ASPECT_RATIO;
              }
              
              app.canvas.style.width = newWidth + 'px';
              app.canvas.style.height = newHeight + 'px';
          }
          
          resizeCanvas();
          window.addEventListener('resize', resizeCanvas);
      }

      // Wait for DOM to be ready, then initialize the game
      if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', initGame);
      } else {
          initGame();
      }
  - path: course1/unit1/lesson2/lessonpart4/styles-checkpoint-1.css
    content: |-
      body {
          margin: 0;
          padding: 0;
          background: #000;
          display: flex;
          justify-content: center;
          align-items: center;
          min-height: 100vh;
          overflow: hidden;
      }
      canvas {
          display: block;
          image-rendering: pixelated;
      }
units:
  - unit1/index.yml
  - unit3/index.yml
  - unit2/index.yml
