# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart1
title: 🔁 Game update loops
content: >+
  We have a ship on the screen now, but with nothing moving, it's not a very
  exciting game.


  ### Game update loops


  Many applications and websites run in a way that the user hits a key or
  presses a button, then the UI updates, then it goes back to waiting for the
  next user input. But this doesn't work for something like a video game. Video
  games need to be updating all the time, enemies are moving, sprites are
  animating, scores are updating. So almost all video games run on a game update
  loop, where the game state is continually changing, and the graphics are
  continually redrawn on screen. When you hear about games running at 60 FPS
  ([Frames Per Second](https://en.wikipedia.org/wiki/Frame_rate)) they are
  referring to how fast the game update loop is running. The faster the game
  update loop is running the more responsive the game feels and the smoother the
  animations look, 60 FPS is considered a bit of gold standard for games, while
  dropping under 30 FPS can start to feel laggy and jittery.


  ### Sample game update loop


  ```mermaid

  flowchart TD
      A[Game Starts] --> B[Initialize Game State]
      B --> C{Game Running?}
      C -->|No| Z[Game Ends]
      C -->|Yes| D[Process Input]
      D --> E[Update Game Logic]
      E --> F[Update Physics]
      F --> G[Update Animations]
      G --> H[Render/Draw Frame]
      H --> I[Display Frame to Screen]
      I --> J[Wait for Next Frame<br/>~16.67ms for 60 FPS]
      J --> C
  ```

questionGroups:
  - id: "1"
    questions:
      - id: "1"
        type: choice
        content: What does FPS stand for?
        options:
          - id: "1"
            value: Frame Percent Served
            isCorrect: true
          - id: "2"
            value: Fast PNG Setup
          - id: "3"
            value: Frames Per Second
